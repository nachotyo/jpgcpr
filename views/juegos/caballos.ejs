<% layout('layout/navbar.ejs') %>
  <style>
    #divPrincipio {
      position: absolute;
      margin-top: 1%;
      margin-left: 14%;
    }

    #divFinal {
      position: absolute;
      margin-top: 1%;
      margin-left: 16%;
    }

    #contenedor {
      position: relative;
      margin-left: 32%;
      margin-top: 5%;
      width: 615px;
      height: 290px;
      background-image: url(/pistaCaballos.jpg);

    }

    #instrucciones {
      position: absolute;
      width: 20%;
      height: 50%;
      margin-top: -15%;
      margin-left: 1.2%;
    }

    #textoInstrucciones {
      color: aliceblue;
      margin: 5%;
    }

    #Reclamar {
      margin-top: -20%;
    }

    .alertasPersonalizadas {
      margin-left: 20%;
      margin-right: 20%;
      margin-bottom: 1%;
      margin-top: 2%;
    }

    .instruccionesCompacto{
      margin-top: 10%;
      margin-left: 20%;
      margin-right: 20%;
    }
  </style>
  <script>
    window.onload = function () {
      // Variables 
      caballos = [];
      movimientos = [];
      primeraVez = true;
      // Obtención de elementos del body
      btn = document.getElementById("btn");
      reclamar = document.getElementById("Reclamar");
      dinero = document.getElementById("dinero").textContent;
      divFinal = document.getElementById("divFinal");
      divPrincipio = document.getElementById("divPrincipio");
      alertaDinero = document.getElementById("alertaDinero");
      alertaCaballo = document.getElementById("alertaCaballo");
      alertaVictoria = document.getElementById("alertaVictoria");
      alertaDerrota = document.getElementById("alertaDerrota");
      dineroFinal = 0;
      // Ponemos invisible las alertas personalizadas y el div Final
      divFinal.style.display = "none";
      alertaDinero.style.display = "none";
      alertaDerrota.style.display = "none";
      alertaVictoria.style.display = "none";
      alertaCaballo.style.display = "none";
      // Separamos el texto del dinero por espacios
      dineroLimpio = dinero.split(" ");
      // No hace nada
      //reclamar.onclick = reclama;

      // Si localDinero no es igual a "localApuesta" (LocalApuesta es una variable que se crea despues, esta variable contiene el dinero del usuario despues de jugar) y puedeJugar es false
      if (!localStorage.getItem("puedeJugar")) {
        localStorage.setItem("puedeJugar", "true");
      }
      // Obtenemos la variable "localApuesta"
      puedeJugar = localStorage.getItem("puedeJugar");
      // Guardamos otra variable en local con el dinero que tiene ahora el usuario
      localStorage.setItem("localDinero", parseInt(dineroLimpio[2]));
      // Obtenemos la variable local "localDinero"
      localDinero = localStorage.getItem("localDinero");

      // Si localDinero no es igual a "localApuesta" (LocalApuesta es una variable que se crea despues, esta variable contiene el dinero del usuario despues de jugar) y puedeJugar es false
      if (localDinero != parseInt(localStorage.getItem("localApuesta")) && puedeJugar == "false") {
        // Obtenemos la variable "localApuesta"
        dineroFinal = parseInt(localStorage.getItem("localApuesta"));
        // Cambiamos el valor de premioFinal por el valor de dineroFinal
        document.getElementById("premioFinal").value = dineroFinal;
        // Ponemos invisible divPrincipio
        divPrincipio.style.display = "none";
        // Ponemos visible divFinal
        divFinal.style.display = "block";
        // Si no es
      } else {
        // Ponemos la variable puedeJugar en true
        localStorage.setItem("puedeJugar", "true");
        // Si el usuario pulsa el botón empieza el juego
        btn.onclick = click;

      }
    }

    function guardarLocal(dineroF) {
      localStorage.setItem("localApuesta", dineroF);
    }

    function Caballo(a, b, h, i) {
      this.x = a;
      this.y = b;
      this.avx = h;
      this.id = i;
    }
    // Función para crear un caballo
    Caballo.prototype.crearCaballo = function () {
      // Creamos un div
      this.caballo = document.createElement("div");
      // Le cambiamos el style
      this.caballo.style.width = "30px";
      this.caballo.style.height = "30px";
      this.caballo.style.position = "absolute";
      // Posición left
      this.caballo.style.left = this.x + "px";
      // Posición top
      this.caballo.style.top = this.y + "px";
      // Color del div (Se asigna color al div por si acaso no carga la img)
      //this.caballo.style.backgroundColor = "red";
      // Imagen del div
      this.caballo.style.backgroundImage = "url(/caballo.png)";
      // Dorsal que llevara el caballo
      this.dorsal = document.createTextNode(this.id);
      // Le asignamos el texto al div
      this.caballo.appendChild(this.dorsal);
      // Añadimos el div al body
      espacio.appendChild(this.caballo);
    }

    // Función para mover el caballo
    Caballo.prototype.moverCaballo = function () {
      // Incrementa el left del caballo dependiendo de la velocidad del mismo
      this.caballo.style.left = parseInt(this.caballo.style.left) + this.avx + "px";
      // Si llega a 600 (final)
      if (parseInt(this.caballo.style.left) > 570) {
        // For de movimientos.length
        for (let index = 0; index < movimientos.length; index++) {
          // Quitamos todos los intervalos (Parar los caballos)
          clearInterval(movimientos[index]);
        }

        // Si el caballo ganador es el que ha elegido el usuario
        if (parseInt(document.getElementById("eleccCaballo").value) === this.id) {
          // Muestra el alert de victoria
          alertaVictoria.style.display = "block";
          // Añade el dinero apuestado
          dineroFinal = parseInt(dineroLimpio[2]) + parseInt(document.getElementById("texto").value);
          document.getElementById("premioFinal").value = dineroFinal;
          // Mustra el divFinal
          divFinal.style.display = "block";
          // Pone invisible el divPrincipio
          divPrincipio.style.display = "none";
          // Si el usuario no acierta
        } else {
          // Se muestra el alert de derrota
          alertaDerrota.style.display = "block";
          // Resta el dinero apoostado
          dineroFinal = parseInt(dineroLimpio[2]) - parseInt(document.getElementById("texto").value);
          document.getElementById("premioFinal").value = dineroFinal;
          // Mustra el divFinal
          divFinal.style.display = "block";
          // Pone invisible el divPrincipio
          divPrincipio.style.display = "none";
        }
        // Llama a la función guardarLocal y le pasa el dinero final del usuario
        guardarLocal(dineroFinal);
      }
    }

    // Función para cambiar la velocidad del caballo
    Caballo.prototype.cambiarRitmo = function () {
      // Número aleatorio entre 0 y 10
      this.avx = Math.random() * (10 - 0) + 0;
    }

    // Función que empieza el juego
    function click() {
      // Comprueba si el usuario ha elegido un caballo valido
      if (parseInt(document.getElementById("eleccCaballo").value) >= 0 && parseInt(document.getElementById("eleccCaballo").value) <= 2) {
        // Comprueba si la apuesta del usuario esta entre 0 y su dinero total
        if (document.getElementById("texto").value <= parseInt(dineroLimpio[2]) && parseInt(document.getElementById("texto").value) > 0) {
          // Cambiamos el valor de la variable local puedeJugar a false
          localStorage.setItem("puedeJugar", "false");
          divPrincipio.style.display = "none";
          // Ponemos invisibles las alertas personalizadas
          alertaDinero.style.display = "none";
          alertaCaballo.style.display = "none";

          // Distancia entre los caballos en el div
          distancia = 155;
          // Velocidad del caballo
          ritmo = 1;
          // Obtenemos el div llamado espacio del body
          espacio = document.getElementById("contenedor");
          // For de 3 para crear los caballos
          for (let i = 0; i < 3; i++) {
            // Creamos la variable j
            let j = i;
            // Rellenamos el constructor del caballo
            caballos[i] = new Caballo(
              // Posición de inicio
              a = 0,
              // Distancia entre los otros caballos
              b = distancia,
              // Velocidad del caballo
              h = ritmo,
              // Posición en el array y su id
              i = j,
            );
            // Llamamos a la función para crear un caballo
            caballos[i].crearCaballo();
            // Guardamos en un array el interval de cada caballo
            movimientos[i] = setInterval(function () {
              // Se ejecutara la función llamada moverCaballo cada 20mm
              caballos[j].moverCaballo();
            }, 20);

            // Creamos un intervalo para cambiar la velocidad del caballo cada 10mm
            setInterval(function () {
              caballos[j].cambiarRitmo();
            }, 10);
            // Agrandamos la distancia entre los caballos (top)
            distancia = distancia + 40;
          }
          // Si no esta bien la apuesta introducida por el usuario
        } else {
          // Ponemos invisible la alerta de caballo mal introducido      
          alertaCaballo.style.display = "none";
          // Ponemos visible la alerta de dinero mal introducido
          alertaDinero.style.display = "block";
        }
        // Si no esta bien el caballo introducido
      } else {
        alertaDinero.style.display = "none";
        alertaCaballo.style.display = "block";
      }
    }

    /*
    function reclama() {
      document.getElementById("premioFinal").value = dineroFinal;
    }
    */
  </script>
  </head>

  <body>

    <div class="shadow p-3 mb-5 bg-body rounded contenedor">
      <h2 class="text-center">Carrera de caballos</h2>
    </div>

    <!-- Alertas para el usuario -->
    <div class="alert alert-danger alertasPersonalizadas" id="alertaDinero" role="alert">
      No tiene suficiente dinero
    </div>

    <div class="alert alert-danger alertasPersonalizadas" id="alertaCaballo" role="alert">
      Tiene que seleccionar un caballo valido
    </div>

    <div class="alert alert-success alertasPersonalizadas" id="alertaVictoria" role="alert">
      ¡Ha ganado tu caballo!
    </div>

    <div class="alert alert-warning alertasPersonalizadas" id="alertaDerrota" role="alert">
      Has perdido, más suerte la proxima vez.
    </div>

    <div id="contenedor" class="border border-5">
    </div>



    <!-- Instrucciones -->
   

    <!-- Div Principal donde se empieza el juego -->
    
    
    
      <div class="container-lg" id="divPrincipio">
        <div class="input-group">
          <span class="input-group-text">Apuesta y Caballo</span>
          <input type="text" aria-label="Apuesta" id="texto" class="form-control">
          <input type="text" aria-label="Apuesta" id="eleccCaballo" class="form-control">
        </div>
        <!-- Boton para empezar a jugar -->
        <!-- <button id="btnEmpezar">Empezar</button>-->
        <button type="button" class="btn btn-primary btn-block mt-4 btn-dark btn-lg rounded-pill" id="btn">Empezar</button>
        <!-- Div invisible donde guardamos el dinero del usuario -->
        <div class="invisible">
          <h4 id="dinero">
            <!-- Dinero del usuario -->
            <%= user.monedas %>
          </h4>
        </div>
      </div>
      <!-- Div Final donde se finaliza el juego -->
      <div class="container-lg" id="divFinal">
      <div class="row">
        <div class="col mt-4 text-center">
          <!-- Creamos un form para enviarselo a la base de datos -->
          <form action="/caballos" method="POST">
            <!-- Input donde estará el id del usuario (Este input es invisible) -->
            <input type="hidden" name="id" value="<%= user.id %>"></input>
            <!-- Input donde estará las monedas finales del usuario (Este input es invisible) -->
            <input type="number" class="invisible" name="monedas" id="premioFinal" placeholder="Monedas">
            <p></p>
            <!-- Botón para enviar el form a la base de datos -->
            <button type="submit" class="btn btn-primary btn-block mt-4 btn-dark btn-lg rounded-pill" id="Reclamar">Volver a jugar</button>
            <!--
            <button id="Reclamar">
              Volver a jugar
            </button>
            -->
          </form>
        </div>
      </div>
    </div>

    <div class="instruccionesCompacto border-start-0">
    <div class="accordion accordion-flush" id="accordionFlushExample">
      <div class="accordion-item">
        <h2 class="accordion-header" id="flush-headingOne">
          <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseOne" aria-expanded="false" aria-controls="flush-collapseOne">
            Instrucciones de juego
          </button>
        </h2>
        <div id="flush-collapseOne" class="accordion-collapse collapse" aria-labelledby="flush-headingOne" data-bs-parent="#accordionFlushExample">
          <div class="accordion-body"> <p>El usuario tendrá que elegir un caballo, cada caballo tiene un identificador que le identifica (números del 0
            al 2), el orden de los identificadores van de arriba a abajo.</p>
          <p>La apuesta tendrá que ser menor al sueldo del usuario, si el usuario elige el caballo ganador ganara el
            dinero aposta, en cambio, si el caballo no gana la carrera el usuario perderá la apuesta.</p></div>
        </div>
      </div>
      <div class="accordion-item">
        <h2 class="accordion-header" id="flush-headingTwo">
          <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseTwo" aria-expanded="false" aria-controls="flush-collapseTwo">
            Sin diversión no hay juego
          </button>
        </h2>
        <div id="flush-collapseTwo" class="accordion-collapse collapse" aria-labelledby="flush-headingTwo" data-bs-parent="#accordionFlushExample">
          <div class="accordion-body">En Apuestas para gente con pocos recursos no se apuesta con dinero real, ¡Que nada te impida pasar un buen rato jugando!</div>
        </div>
      </div>
      <div class="accordion-item">
        <h2 class="accordion-header" id="flush-headingThree">
          <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseThree" aria-expanded="false" aria-controls="flush-collapseThree">
            ¿Algún problema?
          </button>
        </h2>
        <div id="flush-collapseThree" class="accordion-collapse collapse" aria-labelledby="flush-headingThree" data-bs-parent="#accordionFlushExample">
          <div class="accordion-body">¿Algún problema en alguno de nuestros juegos? <a href="/contacto">¡Contáctanos clicando aquí!</a></div>
        </div>
      </div>
    </div>
  </div>